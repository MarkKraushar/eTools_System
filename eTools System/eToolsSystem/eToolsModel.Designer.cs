//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_StockItemCategory_CategoryID", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.Category), "StockItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.StockItem), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_EmployeePosition_PositionID", "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.Position), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.Employee), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_PurchaseEmployee_EmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.Employee), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_SaleEmployee_EmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.Employee), "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.Sale), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.PurchaseOrder), "PurchaseOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.PurchaseOrderDetail), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_PurchaseVendor_VendorID", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.Vendor), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_PurchaseOrderDetailStockItem_StockNumber", "StockItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.StockItem), "PurchaseOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.PurchaseOrderDetail), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_SaleDetailSale_SaleNumber", "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.Sale), "SaleDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.SaleDetail), true)]
[assembly: EdmRelationshipAttribute("eToolsSystem", "FK_SaleDetailStockItem_StockNumber", "StockItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eToolsSystem.StockItem), "SaleDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eToolsSystem.SaleDetail), true)]

#endregion

namespace eToolsSystem
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class eToolsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new eToolsEntities object using the connection string found in the 'eToolsEntities' section of the application configuration file.
        /// </summary>
        public eToolsEntities() : base("name=eToolsEntities", "eToolsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eToolsEntities object.
        /// </summary>
        public eToolsEntities(string connectionString) : base(connectionString, "eToolsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eToolsEntities object.
        /// </summary>
        public eToolsEntities(EntityConnection connection) : base(connection, "eToolsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IDGenerator> IDGenerators
        {
            get
            {
                if ((_IDGenerators == null))
                {
                    _IDGenerators = base.CreateObjectSet<IDGenerator>("IDGenerators");
                }
                return _IDGenerators;
            }
        }
        private ObjectSet<IDGenerator> _IDGenerators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrders
        {
            get
            {
                if ((_PurchaseOrders == null))
                {
                    _PurchaseOrders = base.CreateObjectSet<PurchaseOrder>("PurchaseOrders");
                }
                return _PurchaseOrders;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrderDetail> PurchaseOrderDetails
        {
            get
            {
                if ((_PurchaseOrderDetails == null))
                {
                    _PurchaseOrderDetails = base.CreateObjectSet<PurchaseOrderDetail>("PurchaseOrderDetails");
                }
                return _PurchaseOrderDetails;
            }
        }
        private ObjectSet<PurchaseOrderDetail> _PurchaseOrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sale> Sales
        {
            get
            {
                if ((_Sales == null))
                {
                    _Sales = base.CreateObjectSet<Sale>("Sales");
                }
                return _Sales;
            }
        }
        private ObjectSet<Sale> _Sales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SaleDetail> SaleDetails
        {
            get
            {
                if ((_SaleDetails == null))
                {
                    _SaleDetails = base.CreateObjectSet<SaleDetail>("SaleDetails");
                }
                return _SaleDetails;
            }
        }
        private ObjectSet<SaleDetail> _SaleDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockItem> StockItems
        {
            get
            {
                if ((_StockItems == null))
                {
                    _StockItems = base.CreateObjectSet<StockItem>("StockItems");
                }
                return _StockItems;
            }
        }
        private ObjectSet<StockItem> _StockItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryUnitsOnOrder> InventoryUnitsOnOrders
        {
            get
            {
                if ((_InventoryUnitsOnOrders == null))
                {
                    _InventoryUnitsOnOrders = base.CreateObjectSet<InventoryUnitsOnOrder>("InventoryUnitsOnOrders");
                }
                return _InventoryUnitsOnOrders;
            }
        }
        private ObjectSet<InventoryUnitsOnOrder> _InventoryUnitsOnOrders;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IDGenerators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIDGenerators(IDGenerator iDGenerator)
        {
            base.AddObject("IDGenerators", iDGenerator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrders(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrders", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrderDetails(PurchaseOrderDetail purchaseOrderDetail)
        {
            base.AddObject("PurchaseOrderDetails", purchaseOrderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSales(Sale sale)
        {
            base.AddObject("Sales", sale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SaleDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSaleDetails(SaleDetail saleDetail)
        {
            base.AddObject("SaleDetails", saleDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockItems(StockItem stockItem)
        {
            base.AddObject("StockItems", stockItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryUnitsOnOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryUnitsOnOrders(InventoryUnitsOnOrder inventoryUnitsOnOrder)
        {
            base.AddObject("InventoryUnitsOnOrders", inventoryUnitsOnOrder);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="salerefund">No Metadata Documentation available.</param>
        /// <param name="originalsalenumber">No Metadata Documentation available.</param>
        /// <param name="taxamount">No Metadata Documentation available.</param>
        /// <param name="subtotal">No Metadata Documentation available.</param>
        public int CreateSale(global::System.String salerefund, Nullable<global::System.Int32> originalsalenumber, Nullable<global::System.Decimal> taxamount, Nullable<global::System.Decimal> subtotal)
        {
            ObjectParameter salerefundParameter;
            if (salerefund != null)
            {
                salerefundParameter = new ObjectParameter("salerefund", salerefund);
            }
            else
            {
                salerefundParameter = new ObjectParameter("salerefund", typeof(global::System.String));
            }
    
            ObjectParameter originalsalenumberParameter;
            if (originalsalenumber.HasValue)
            {
                originalsalenumberParameter = new ObjectParameter("originalsalenumber", originalsalenumber);
            }
            else
            {
                originalsalenumberParameter = new ObjectParameter("originalsalenumber", typeof(global::System.Int32));
            }
    
            ObjectParameter taxamountParameter;
            if (taxamount.HasValue)
            {
                taxamountParameter = new ObjectParameter("taxamount", taxamount);
            }
            else
            {
                taxamountParameter = new ObjectParameter("taxamount", typeof(global::System.Decimal));
            }
    
            ObjectParameter subtotalParameter;
            if (subtotal.HasValue)
            {
                subtotalParameter = new ObjectParameter("subtotal", subtotal);
            }
            else
            {
                subtotalParameter = new ObjectParameter("subtotal", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction("CreateSale", salerefundParameter, originalsalenumberParameter, taxamountParameter, subtotalParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="stocknumber">No Metadata Documentation available.</param>
        /// <param name="sellingprice">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        public int CreateSaleDetail(Nullable<global::System.Int32> stocknumber, Nullable<global::System.Decimal> sellingprice, Nullable<global::System.Int32> quantity)
        {
            ObjectParameter stocknumberParameter;
            if (stocknumber.HasValue)
            {
                stocknumberParameter = new ObjectParameter("stocknumber", stocknumber);
            }
            else
            {
                stocknumberParameter = new ObjectParameter("stocknumber", typeof(global::System.Int32));
            }
    
            ObjectParameter sellingpriceParameter;
            if (sellingprice.HasValue)
            {
                sellingpriceParameter = new ObjectParameter("sellingprice", sellingprice);
            }
            else
            {
                sellingpriceParameter = new ObjectParameter("sellingprice", typeof(global::System.Decimal));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("quantity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CreateSaleDetail", stocknumberParameter, sellingpriceParameter, quantityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="searchterm">No Metadata Documentation available.</param>
        public ObjectResult<StockItemByDescription> GetStockItemByDescription(global::System.String searchterm)
        {
            ObjectParameter searchtermParameter;
            if (searchterm != null)
            {
                searchtermParameter = new ObjectParameter("searchterm", searchterm);
            }
            else
            {
                searchtermParameter = new ObjectParameter("searchterm", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<StockItemByDescription>("GetStockItemByDescription", searchtermParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="stocknumber">No Metadata Documentation available.</param>
        public ObjectResult<StockItemByStockNumber> GetStockItemByStockNumber(Nullable<global::System.Int32> stocknumber)
        {
            ObjectParameter stocknumberParameter;
            if (stocknumber.HasValue)
            {
                stocknumberParameter = new ObjectParameter("stocknumber", stocknumber);
            }
            else
            {
                stocknumberParameter = new ObjectParameter("stocknumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<StockItemByStockNumber>("GetStockItemByStockNumber", stocknumberParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="salenumber">No Metadata Documentation available.</param>
        public ObjectResult<SaleDetailsBySaleNumber> GetSaleDetailsBySaleNumber(Nullable<global::System.Int32> salenumber)
        {
            ObjectParameter salenumberParameter;
            if (salenumber.HasValue)
            {
                salenumberParameter = new ObjectParameter("salenumber", salenumber);
            }
            else
            {
                salenumberParameter = new ObjectParameter("salenumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SaleDetailsBySaleNumber>("GetSaleDetailsBySaleNumber", salenumberParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="originalsalenumber">No Metadata Documentation available.</param>
        public ObjectResult<ReturnDetailsByOriginalSaleNumber> GetReturnDetailsByOriginalSaleNumber(Nullable<global::System.Int32> originalsalenumber)
        {
            ObjectParameter originalsalenumberParameter;
            if (originalsalenumber.HasValue)
            {
                originalsalenumberParameter = new ObjectParameter("originalsalenumber", originalsalenumber);
            }
            else
            {
                originalsalenumberParameter = new ObjectParameter("originalsalenumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ReturnDetailsByOriginalSaleNumber>("GetReturnDetailsByOriginalSaleNumber", originalsalenumberParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="stocknumber">No Metadata Documentation available.</param>
        /// <param name="returnprice">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        public int CreateReturnDetail(Nullable<global::System.Int32> stocknumber, Nullable<global::System.Decimal> returnprice, Nullable<global::System.Int32> quantity)
        {
            ObjectParameter stocknumberParameter;
            if (stocknumber.HasValue)
            {
                stocknumberParameter = new ObjectParameter("stocknumber", stocknumber);
            }
            else
            {
                stocknumberParameter = new ObjectParameter("stocknumber", typeof(global::System.Int32));
            }
    
            ObjectParameter returnpriceParameter;
            if (returnprice.HasValue)
            {
                returnpriceParameter = new ObjectParameter("returnprice", returnprice);
            }
            else
            {
                returnpriceParameter = new ObjectParameter("returnprice", typeof(global::System.Decimal));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("quantity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CreateReturnDetail", stocknumberParameter, returnpriceParameter, quantityParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String description)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.Description = description;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_StockItemCategory_CategoryID", "StockItem")]
        public EntityCollection<StockItem> StockItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockItem>("eToolsSystem.FK_StockItemCategory_CategoryID", "StockItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockItem>("eToolsSystem.FK_StockItemCategory_CategoryID", "StockItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="dateHired">Initial value of the DateHired property.</param>
        /// <param name="positionID">Initial value of the PositionID property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeID, global::System.String firstName, global::System.String lastName, global::System.DateTime dateHired, global::System.Int32 positionID)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.DateHired = dateHired;
            employee.PositionID = positionID;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateHired
        {
            get
            {
                return _DateHired;
            }
            set
            {
                OnDateHiredChanging(value);
                ReportPropertyChanging("DateHired");
                _DateHired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateHired");
                OnDateHiredChanged();
            }
        }
        private global::System.DateTime _DateHired;
        partial void OnDateHiredChanging(global::System.DateTime value);
        partial void OnDateHiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReleased
        {
            get
            {
                return _DateReleased;
            }
            set
            {
                OnDateReleasedChanging(value);
                ReportPropertyChanging("DateReleased");
                _DateReleased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReleased");
                OnDateReleasedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReleased;
        partial void OnDateReleasedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReleasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                OnPositionIDChanging(value);
                ReportPropertyChanging("PositionID");
                _PositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionID");
                OnPositionIDChanged();
            }
        }
        private global::System.Int32 _PositionID;
        partial void OnPositionIDChanging(global::System.Int32 value);
        partial void OnPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginID
        {
            get
            {
                return _LoginID;
            }
            set
            {
                OnLoginIDChanging(value);
                ReportPropertyChanging("LoginID");
                _LoginID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginID");
                OnLoginIDChanged();
            }
        }
        private global::System.String _LoginID;
        partial void OnLoginIDChanging(global::System.String value);
        partial void OnLoginIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_EmployeePosition_PositionID", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("eToolsSystem.FK_EmployeePosition_PositionID", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("eToolsSystem.FK_EmployeePosition_PositionID", "Position").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("eToolsSystem.FK_EmployeePosition_PositionID", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("eToolsSystem.FK_EmployeePosition_PositionID", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseEmployee_EmployeeID", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("eToolsSystem.FK_PurchaseEmployee_EmployeeID", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("eToolsSystem.FK_PurchaseEmployee_EmployeeID", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_SaleEmployee_EmployeeID", "Sale")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("eToolsSystem.FK_SaleEmployee_EmployeeID", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("eToolsSystem.FK_SaleEmployee_EmployeeID", "Sale", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="IDGenerator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IDGenerator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IDGenerator object.
        /// </summary>
        /// <param name="keyField">Initial value of the KeyField property.</param>
        /// <param name="lastValue">Initial value of the LastValue property.</param>
        public static IDGenerator CreateIDGenerator(global::System.String keyField, global::System.Int32 lastValue)
        {
            IDGenerator iDGenerator = new IDGenerator();
            iDGenerator.KeyField = keyField;
            iDGenerator.LastValue = lastValue;
            return iDGenerator;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyField
        {
            get
            {
                return _KeyField;
            }
            set
            {
                if (_KeyField != value)
                {
                    OnKeyFieldChanging(value);
                    ReportPropertyChanging("KeyField");
                    _KeyField = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("KeyField");
                    OnKeyFieldChanged();
                }
            }
        }
        private global::System.String _KeyField;
        partial void OnKeyFieldChanging(global::System.String value);
        partial void OnKeyFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastValue
        {
            get
            {
                return _LastValue;
            }
            set
            {
                OnLastValueChanging(value);
                ReportPropertyChanging("LastValue");
                _LastValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastValue");
                OnLastValueChanged();
            }
        }
        private global::System.Int32 _LastValue;
        partial void OnLastValueChanging(global::System.Int32 value);
        partial void OnLastValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="InventoryUnitsOnOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryUnitsOnOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryUnitsOnOrder object.
        /// </summary>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        public static InventoryUnitsOnOrder CreateInventoryUnitsOnOrder(global::System.Int32 stockNumber)
        {
            InventoryUnitsOnOrder inventoryUnitsOnOrder = new InventoryUnitsOnOrder();
            inventoryUnitsOnOrder.StockNumber = stockNumber;
            return inventoryUnitsOnOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                if (_StockNumber != value)
                {
                    OnStockNumberChanging(value);
                    ReportPropertyChanging("StockNumber");
                    _StockNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StockNumber");
                    OnStockNumberChanged();
                }
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnitsOnOrder
        {
            get
            {
                return _UnitsOnOrder;
            }
            set
            {
                OnUnitsOnOrderChanging(value);
                ReportPropertyChanging("UnitsOnOrder");
                _UnitsOnOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitsOnOrder");
                OnUnitsOnOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _UnitsOnOrder;
        partial void OnUnitsOnOrderChanging(Nullable<global::System.Int32> value);
        partial void OnUnitsOnOrderChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="positionID">Initial value of the PositionID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Position CreatePosition(global::System.Int32 positionID, global::System.String description)
        {
            Position position = new Position();
            position.PositionID = positionID;
            position.Description = description;
            return position;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                if (_PositionID != value)
                {
                    OnPositionIDChanging(value);
                    ReportPropertyChanging("PositionID");
                    _PositionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PositionID");
                    OnPositionIDChanged();
                }
            }
        }
        private global::System.Int32 _PositionID;
        partial void OnPositionIDChanging(global::System.Int32 value);
        partial void OnPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_EmployeePosition_PositionID", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("eToolsSystem.FK_EmployeePosition_PositionID", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("eToolsSystem.FK_EmployeePosition_PositionID", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="vendorID">Initial value of the VendorID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="taxAmount">Initial value of the TaxAmount property.</param>
        /// <param name="subTotal">Initial value of the SubTotal property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.Int32 orderNumber, global::System.DateTime orderDate, global::System.Int32 vendorID, global::System.Int32 employeeID, global::System.Decimal taxAmount, global::System.Decimal subTotal)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.OrderNumber = orderNumber;
            purchaseOrder.OrderDate = orderDate;
            purchaseOrder.VendorID = vendorID;
            purchaseOrder.EmployeeID = employeeID;
            purchaseOrder.TaxAmount = taxAmount;
            purchaseOrder.SubTotal = subTotal;
            return purchaseOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                if (_OrderNumber != value)
                {
                    OnOrderNumberChanging(value);
                    ReportPropertyChanging("OrderNumber");
                    _OrderNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderNumber");
                    OnOrderNumberChanged();
                }
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceiveDate
        {
            get
            {
                return _ReceiveDate;
            }
            set
            {
                OnReceiveDateChanging(value);
                ReportPropertyChanging("ReceiveDate");
                _ReceiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiveDate");
                OnReceiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceiveDate;
        partial void OnReceiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorID
        {
            get
            {
                return _VendorID;
            }
            set
            {
                OnVendorIDChanging(value);
                ReportPropertyChanging("VendorID");
                _VendorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorID");
                OnVendorIDChanged();
            }
        }
        private global::System.Int32 _VendorID;
        partial void OnVendorIDChanging(global::System.Int32 value);
        partial void OnVendorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TaxAmount
        {
            get
            {
                return _TaxAmount;
            }
            set
            {
                OnTaxAmountChanging(value);
                ReportPropertyChanging("TaxAmount");
                _TaxAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxAmount");
                OnTaxAmountChanged();
            }
        }
        private global::System.Decimal _TaxAmount;
        partial void OnTaxAmountChanging(global::System.Decimal value);
        partial void OnTaxAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SubTotal
        {
            get
            {
                return _SubTotal;
            }
            set
            {
                OnSubTotalChanging(value);
                ReportPropertyChanging("SubTotal");
                _SubTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubTotal");
                OnSubTotalChanged();
            }
        }
        private global::System.Decimal _SubTotal;
        partial void OnSubTotalChanging(global::System.Decimal value);
        partial void OnSubTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseEmployee_EmployeeID", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("eToolsSystem.FK_PurchaseEmployee_EmployeeID", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("eToolsSystem.FK_PurchaseEmployee_EmployeeID", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("eToolsSystem.FK_PurchaseEmployee_EmployeeID", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("eToolsSystem.FK_PurchaseEmployee_EmployeeID", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrderDetail")]
        public EntityCollection<PurchaseOrderDetail> PurchaseOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrderDetail>("eToolsSystem.FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrderDetail>("eToolsSystem.FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseVendor_VendorID", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("eToolsSystem.FK_PurchaseVendor_VendorID", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("eToolsSystem.FK_PurchaseVendor_VendorID", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("eToolsSystem.FK_PurchaseVendor_VendorID", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("eToolsSystem.FK_PurchaseVendor_VendorID", "Vendor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="PurchaseOrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrderDetail object.
        /// </summary>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        /// <param name="purchasePrice">Initial value of the PurchasePrice property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static PurchaseOrderDetail CreatePurchaseOrderDetail(global::System.Int32 orderNumber, global::System.Int32 stockNumber, global::System.Decimal purchasePrice, global::System.Int32 quantity)
        {
            PurchaseOrderDetail purchaseOrderDetail = new PurchaseOrderDetail();
            purchaseOrderDetail.OrderNumber = orderNumber;
            purchaseOrderDetail.StockNumber = stockNumber;
            purchaseOrderDetail.PurchasePrice = purchasePrice;
            purchaseOrderDetail.Quantity = quantity;
            return purchaseOrderDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                if (_OrderNumber != value)
                {
                    OnOrderNumberChanging(value);
                    ReportPropertyChanging("OrderNumber");
                    _OrderNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderNumber");
                    OnOrderNumberChanged();
                }
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                if (_StockNumber != value)
                {
                    OnStockNumberChanging(value);
                    ReportPropertyChanging("StockNumber");
                    _StockNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StockNumber");
                    OnStockNumberChanged();
                }
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private global::System.Decimal _PurchasePrice;
        partial void OnPurchasePriceChanging(global::System.Decimal value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrder")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("eToolsSystem.FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("eToolsSystem.FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("eToolsSystem.FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("eToolsSystem.FK_PurchaseOrderDetailPurchaseOrder_OrderNumber", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseOrderDetailStockItem_StockNumber", "StockItem")]
        public StockItem StockItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItem>("eToolsSystem.FK_PurchaseOrderDetailStockItem_StockNumber", "StockItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItem>("eToolsSystem.FK_PurchaseOrderDetailStockItem_StockNumber", "StockItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StockItem> StockItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItem>("eToolsSystem.FK_PurchaseOrderDetailStockItem_StockNumber", "StockItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StockItem>("eToolsSystem.FK_PurchaseOrderDetailStockItem_StockNumber", "StockItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="Sale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sale object.
        /// </summary>
        /// <param name="saleNumber">Initial value of the SaleNumber property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="saleRefund">Initial value of the SaleRefund property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="taxAmount">Initial value of the TaxAmount property.</param>
        /// <param name="subTotal">Initial value of the SubTotal property.</param>
        public static Sale CreateSale(global::System.Int32 saleNumber, global::System.DateTime saleDate, global::System.String saleRefund, global::System.Int32 employeeID, global::System.Decimal taxAmount, global::System.Decimal subTotal)
        {
            Sale sale = new Sale();
            sale.SaleNumber = saleNumber;
            sale.SaleDate = saleDate;
            sale.SaleRefund = saleRefund;
            sale.EmployeeID = employeeID;
            sale.TaxAmount = taxAmount;
            sale.SubTotal = subTotal;
            return sale;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SaleNumber
        {
            get
            {
                return _SaleNumber;
            }
            set
            {
                if (_SaleNumber != value)
                {
                    OnSaleNumberChanging(value);
                    ReportPropertyChanging("SaleNumber");
                    _SaleNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SaleNumber");
                    OnSaleNumberChanged();
                }
            }
        }
        private global::System.Int32 _SaleNumber;
        partial void OnSaleNumberChanging(global::System.Int32 value);
        partial void OnSaleNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SaleRefund
        {
            get
            {
                return _SaleRefund;
            }
            set
            {
                OnSaleRefundChanging(value);
                ReportPropertyChanging("SaleRefund");
                _SaleRefund = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SaleRefund");
                OnSaleRefundChanged();
            }
        }
        private global::System.String _SaleRefund;
        partial void OnSaleRefundChanging(global::System.String value);
        partial void OnSaleRefundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OriginalSaleNumber
        {
            get
            {
                return _OriginalSaleNumber;
            }
            set
            {
                OnOriginalSaleNumberChanging(value);
                ReportPropertyChanging("OriginalSaleNumber");
                _OriginalSaleNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalSaleNumber");
                OnOriginalSaleNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _OriginalSaleNumber;
        partial void OnOriginalSaleNumberChanging(Nullable<global::System.Int32> value);
        partial void OnOriginalSaleNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TaxAmount
        {
            get
            {
                return _TaxAmount;
            }
            set
            {
                OnTaxAmountChanging(value);
                ReportPropertyChanging("TaxAmount");
                _TaxAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxAmount");
                OnTaxAmountChanged();
            }
        }
        private global::System.Decimal _TaxAmount;
        partial void OnTaxAmountChanging(global::System.Decimal value);
        partial void OnTaxAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SubTotal
        {
            get
            {
                return _SubTotal;
            }
            set
            {
                OnSubTotalChanging(value);
                ReportPropertyChanging("SubTotal");
                _SubTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubTotal");
                OnSubTotalChanged();
            }
        }
        private global::System.Decimal _SubTotal;
        partial void OnSubTotalChanging(global::System.Decimal value);
        partial void OnSubTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_SaleEmployee_EmployeeID", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("eToolsSystem.FK_SaleEmployee_EmployeeID", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("eToolsSystem.FK_SaleEmployee_EmployeeID", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("eToolsSystem.FK_SaleEmployee_EmployeeID", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("eToolsSystem.FK_SaleEmployee_EmployeeID", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_SaleDetailSale_SaleNumber", "SaleDetail")]
        public EntityCollection<SaleDetail> SaleDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleDetail>("eToolsSystem.FK_SaleDetailSale_SaleNumber", "SaleDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleDetail>("eToolsSystem.FK_SaleDetailSale_SaleNumber", "SaleDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="SaleDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SaleDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleDetail object.
        /// </summary>
        /// <param name="saleNumber">Initial value of the SaleNumber property.</param>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        /// <param name="sellingPrice">Initial value of the SellingPrice property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static SaleDetail CreateSaleDetail(global::System.Int32 saleNumber, global::System.Int32 stockNumber, global::System.Decimal sellingPrice, global::System.Int32 quantity)
        {
            SaleDetail saleDetail = new SaleDetail();
            saleDetail.SaleNumber = saleNumber;
            saleDetail.StockNumber = stockNumber;
            saleDetail.SellingPrice = sellingPrice;
            saleDetail.Quantity = quantity;
            return saleDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SaleNumber
        {
            get
            {
                return _SaleNumber;
            }
            set
            {
                if (_SaleNumber != value)
                {
                    OnSaleNumberChanging(value);
                    ReportPropertyChanging("SaleNumber");
                    _SaleNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SaleNumber");
                    OnSaleNumberChanged();
                }
            }
        }
        private global::System.Int32 _SaleNumber;
        partial void OnSaleNumberChanging(global::System.Int32 value);
        partial void OnSaleNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                if (_StockNumber != value)
                {
                    OnStockNumberChanging(value);
                    ReportPropertyChanging("StockNumber");
                    _StockNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StockNumber");
                    OnStockNumberChanged();
                }
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellingPrice
        {
            get
            {
                return _SellingPrice;
            }
            set
            {
                OnSellingPriceChanging(value);
                ReportPropertyChanging("SellingPrice");
                _SellingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellingPrice");
                OnSellingPriceChanged();
            }
        }
        private global::System.Decimal _SellingPrice;
        partial void OnSellingPriceChanging(global::System.Decimal value);
        partial void OnSellingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_SaleDetailSale_SaleNumber", "Sale")]
        public Sale Sale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("eToolsSystem.FK_SaleDetailSale_SaleNumber", "Sale").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("eToolsSystem.FK_SaleDetailSale_SaleNumber", "Sale").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sale> SaleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("eToolsSystem.FK_SaleDetailSale_SaleNumber", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sale>("eToolsSystem.FK_SaleDetailSale_SaleNumber", "Sale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_SaleDetailStockItem_StockNumber", "StockItem")]
        public StockItem StockItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItem>("eToolsSystem.FK_SaleDetailStockItem_StockNumber", "StockItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItem>("eToolsSystem.FK_SaleDetailStockItem_StockNumber", "StockItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StockItem> StockItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItem>("eToolsSystem.FK_SaleDetailStockItem_StockNumber", "StockItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StockItem>("eToolsSystem.FK_SaleDetailStockItem_StockNumber", "StockItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="StockItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockItem object.
        /// </summary>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="sellingPrice">Initial value of the SellingPrice property.</param>
        /// <param name="purchasePrice">Initial value of the PurchasePrice property.</param>
        /// <param name="quantityOnHand">Initial value of the QuantityOnHand property.</param>
        /// <param name="reOrderLevel">Initial value of the ReOrderLevel property.</param>
        /// <param name="discontinued">Initial value of the Discontinued property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static StockItem CreateStockItem(global::System.Int32 stockNumber, global::System.String description, global::System.Decimal sellingPrice, global::System.Decimal purchasePrice, global::System.Int32 quantityOnHand, global::System.Int32 reOrderLevel, global::System.String discontinued, global::System.Int32 categoryID)
        {
            StockItem stockItem = new StockItem();
            stockItem.StockNumber = stockNumber;
            stockItem.Description = description;
            stockItem.SellingPrice = sellingPrice;
            stockItem.PurchasePrice = purchasePrice;
            stockItem.QuantityOnHand = quantityOnHand;
            stockItem.ReOrderLevel = reOrderLevel;
            stockItem.Discontinued = discontinued;
            stockItem.CategoryID = categoryID;
            return stockItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                if (_StockNumber != value)
                {
                    OnStockNumberChanging(value);
                    ReportPropertyChanging("StockNumber");
                    _StockNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StockNumber");
                    OnStockNumberChanged();
                }
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellingPrice
        {
            get
            {
                return _SellingPrice;
            }
            set
            {
                OnSellingPriceChanging(value);
                ReportPropertyChanging("SellingPrice");
                _SellingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellingPrice");
                OnSellingPriceChanged();
            }
        }
        private global::System.Decimal _SellingPrice;
        partial void OnSellingPriceChanging(global::System.Decimal value);
        partial void OnSellingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private global::System.Decimal _PurchasePrice;
        partial void OnPurchasePriceChanging(global::System.Decimal value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuantityOnHand
        {
            get
            {
                return _QuantityOnHand;
            }
            set
            {
                OnQuantityOnHandChanging(value);
                ReportPropertyChanging("QuantityOnHand");
                _QuantityOnHand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuantityOnHand");
                OnQuantityOnHandChanged();
            }
        }
        private global::System.Int32 _QuantityOnHand;
        partial void OnQuantityOnHandChanging(global::System.Int32 value);
        partial void OnQuantityOnHandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReOrderLevel
        {
            get
            {
                return _ReOrderLevel;
            }
            set
            {
                OnReOrderLevelChanging(value);
                ReportPropertyChanging("ReOrderLevel");
                _ReOrderLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReOrderLevel");
                OnReOrderLevelChanged();
            }
        }
        private global::System.Int32 _ReOrderLevel;
        partial void OnReOrderLevelChanging(global::System.Int32 value);
        partial void OnReOrderLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Discontinued
        {
            get
            {
                return _Discontinued;
            }
            set
            {
                OnDiscontinuedChanging(value);
                ReportPropertyChanging("Discontinued");
                _Discontinued = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Discontinued");
                OnDiscontinuedChanged();
            }
        }
        private global::System.String _Discontinued;
        partial void OnDiscontinuedChanging(global::System.String value);
        partial void OnDiscontinuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorStockNumber
        {
            get
            {
                return _VendorStockNumber;
            }
            set
            {
                OnVendorStockNumberChanging(value);
                ReportPropertyChanging("VendorStockNumber");
                _VendorStockNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VendorStockNumber");
                OnVendorStockNumberChanged();
            }
        }
        private global::System.String _VendorStockNumber;
        partial void OnVendorStockNumberChanging(global::System.String value);
        partial void OnVendorStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_StockItemCategory_CategoryID", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eToolsSystem.FK_StockItemCategory_CategoryID", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eToolsSystem.FK_StockItemCategory_CategoryID", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eToolsSystem.FK_StockItemCategory_CategoryID", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("eToolsSystem.FK_StockItemCategory_CategoryID", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseOrderDetailStockItem_StockNumber", "PurchaseOrderDetail")]
        public EntityCollection<PurchaseOrderDetail> PurchaseOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrderDetail>("eToolsSystem.FK_PurchaseOrderDetailStockItem_StockNumber", "PurchaseOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrderDetail>("eToolsSystem.FK_PurchaseOrderDetailStockItem_StockNumber", "PurchaseOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_SaleDetailStockItem_StockNumber", "SaleDetail")]
        public EntityCollection<SaleDetail> SaleDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleDetail>("eToolsSystem.FK_SaleDetailStockItem_StockNumber", "SaleDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleDetail>("eToolsSystem.FK_SaleDetailStockItem_StockNumber", "SaleDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eToolsSystem", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="vendorID">Initial value of the VendorID property.</param>
        /// <param name="vendorName">Initial value of the VendorName property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="province">Initial value of the Province property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        public static Vendor CreateVendor(global::System.Int32 vendorID, global::System.String vendorName, global::System.String phone, global::System.String address, global::System.String city, global::System.String province, global::System.String postalCode)
        {
            Vendor vendor = new Vendor();
            vendor.VendorID = vendorID;
            vendor.VendorName = vendorName;
            vendor.Phone = phone;
            vendor.Address = address;
            vendor.City = city;
            vendor.Province = province;
            vendor.PostalCode = postalCode;
            return vendor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorID
        {
            get
            {
                return _VendorID;
            }
            set
            {
                if (_VendorID != value)
                {
                    OnVendorIDChanging(value);
                    ReportPropertyChanging("VendorID");
                    _VendorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VendorID");
                    OnVendorIDChanged();
                }
            }
        }
        private global::System.Int32 _VendorID;
        partial void OnVendorIDChanging(global::System.Int32 value);
        partial void OnVendorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VendorName
        {
            get
            {
                return _VendorName;
            }
            set
            {
                OnVendorNameChanging(value);
                ReportPropertyChanging("VendorName");
                _VendorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VendorName");
                OnVendorNameChanged();
            }
        }
        private global::System.String _VendorName;
        partial void OnVendorNameChanging(global::System.String value);
        partial void OnVendorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eToolsSystem", "FK_PurchaseVendor_VendorID", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("eToolsSystem.FK_PurchaseVendor_VendorID", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("eToolsSystem.FK_PurchaseVendor_VendorID", "PurchaseOrder", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eToolsSystem", Name="ReturnDetailsByOriginalSaleNumber")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ReturnDetailsByOriginalSaleNumber : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReturnDetailsByOriginalSaleNumber object.
        /// </summary>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static ReturnDetailsByOriginalSaleNumber CreateReturnDetailsByOriginalSaleNumber(global::System.Int32 stockNumber, global::System.DateTime saleDate, global::System.Int32 quantity)
        {
            ReturnDetailsByOriginalSaleNumber returnDetailsByOriginalSaleNumber = new ReturnDetailsByOriginalSaleNumber();
            returnDetailsByOriginalSaleNumber.StockNumber = stockNumber;
            returnDetailsByOriginalSaleNumber.SaleDate = saleDate;
            returnDetailsByOriginalSaleNumber.Quantity = quantity;
            return returnDetailsByOriginalSaleNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                OnStockNumberChanging(value);
                ReportPropertyChanging("StockNumber");
                _StockNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockNumber");
                OnStockNumberChanged();
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eToolsSystem", Name="SaleDetailsBySaleNumber")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SaleDetailsBySaleNumber : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleDetailsBySaleNumber object.
        /// </summary>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="sellingPrice">Initial value of the SellingPrice property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static SaleDetailsBySaleNumber CreateSaleDetailsBySaleNumber(global::System.Int32 stockNumber, global::System.String description, global::System.Decimal sellingPrice, global::System.Int32 quantity)
        {
            SaleDetailsBySaleNumber saleDetailsBySaleNumber = new SaleDetailsBySaleNumber();
            saleDetailsBySaleNumber.StockNumber = stockNumber;
            saleDetailsBySaleNumber.Description = description;
            saleDetailsBySaleNumber.SellingPrice = sellingPrice;
            saleDetailsBySaleNumber.Quantity = quantity;
            return saleDetailsBySaleNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                OnStockNumberChanging(value);
                ReportPropertyChanging("StockNumber");
                _StockNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockNumber");
                OnStockNumberChanged();
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellingPrice
        {
            get
            {
                return _SellingPrice;
            }
            set
            {
                OnSellingPriceChanging(value);
                ReportPropertyChanging("SellingPrice");
                _SellingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellingPrice");
                OnSellingPriceChanged();
            }
        }
        private global::System.Decimal _SellingPrice;
        partial void OnSellingPriceChanging(global::System.Decimal value);
        partial void OnSellingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eToolsSystem", Name="StockItemByDescription")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class StockItemByDescription : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockItemByDescription object.
        /// </summary>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="quantityOnHand">Initial value of the QuantityOnHand property.</param>
        /// <param name="sellingPrice">Initial value of the SellingPrice property.</param>
        public static StockItemByDescription CreateStockItemByDescription(global::System.Int32 stockNumber, global::System.String description, global::System.Int32 quantityOnHand, global::System.Decimal sellingPrice)
        {
            StockItemByDescription stockItemByDescription = new StockItemByDescription();
            stockItemByDescription.StockNumber = stockNumber;
            stockItemByDescription.Description = description;
            stockItemByDescription.QuantityOnHand = quantityOnHand;
            stockItemByDescription.SellingPrice = sellingPrice;
            return stockItemByDescription;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                OnStockNumberChanging(value);
                ReportPropertyChanging("StockNumber");
                _StockNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockNumber");
                OnStockNumberChanged();
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuantityOnHand
        {
            get
            {
                return _QuantityOnHand;
            }
            set
            {
                OnQuantityOnHandChanging(value);
                ReportPropertyChanging("QuantityOnHand");
                _QuantityOnHand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuantityOnHand");
                OnQuantityOnHandChanged();
            }
        }
        private global::System.Int32 _QuantityOnHand;
        partial void OnQuantityOnHandChanging(global::System.Int32 value);
        partial void OnQuantityOnHandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellingPrice
        {
            get
            {
                return _SellingPrice;
            }
            set
            {
                OnSellingPriceChanging(value);
                ReportPropertyChanging("SellingPrice");
                _SellingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellingPrice");
                OnSellingPriceChanged();
            }
        }
        private global::System.Decimal _SellingPrice;
        partial void OnSellingPriceChanging(global::System.Decimal value);
        partial void OnSellingPriceChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eToolsSystem", Name="StockItemByStockNumber")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class StockItemByStockNumber : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockItemByStockNumber object.
        /// </summary>
        /// <param name="stockNumber">Initial value of the StockNumber property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="quantityOnHand">Initial value of the QuantityOnHand property.</param>
        /// <param name="sellingPrice">Initial value of the SellingPrice property.</param>
        public static StockItemByStockNumber CreateStockItemByStockNumber(global::System.Int32 stockNumber, global::System.String description, global::System.Int32 quantityOnHand, global::System.Decimal sellingPrice)
        {
            StockItemByStockNumber stockItemByStockNumber = new StockItemByStockNumber();
            stockItemByStockNumber.StockNumber = stockNumber;
            stockItemByStockNumber.Description = description;
            stockItemByStockNumber.QuantityOnHand = quantityOnHand;
            stockItemByStockNumber.SellingPrice = sellingPrice;
            return stockItemByStockNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockNumber
        {
            get
            {
                return _StockNumber;
            }
            set
            {
                OnStockNumberChanging(value);
                ReportPropertyChanging("StockNumber");
                _StockNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockNumber");
                OnStockNumberChanged();
            }
        }
        private global::System.Int32 _StockNumber;
        partial void OnStockNumberChanging(global::System.Int32 value);
        partial void OnStockNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuantityOnHand
        {
            get
            {
                return _QuantityOnHand;
            }
            set
            {
                OnQuantityOnHandChanging(value);
                ReportPropertyChanging("QuantityOnHand");
                _QuantityOnHand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuantityOnHand");
                OnQuantityOnHandChanged();
            }
        }
        private global::System.Int32 _QuantityOnHand;
        partial void OnQuantityOnHandChanging(global::System.Int32 value);
        partial void OnQuantityOnHandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellingPrice
        {
            get
            {
                return _SellingPrice;
            }
            set
            {
                OnSellingPriceChanging(value);
                ReportPropertyChanging("SellingPrice");
                _SellingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellingPrice");
                OnSellingPriceChanged();
            }
        }
        private global::System.Decimal _SellingPrice;
        partial void OnSellingPriceChanging(global::System.Decimal value);
        partial void OnSellingPriceChanged();

        #endregion

    }

    #endregion

    
}
